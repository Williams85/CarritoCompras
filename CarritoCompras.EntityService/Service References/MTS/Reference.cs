//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CarritoCompras.EntityService.MTS {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MTS.IMacroTransaccionService")]
    public interface IMacroTransaccionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMacroTransaccionService/ReservarProducto", ReplyAction="http://tempuri.org/IMacroTransaccionService/ReservarProductoResponse")]
        CarritoCompras.Utilitario.ResponseWeb ReservarProducto(CarritoCompras.Entidad.ProductoEntidad entidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMacroTransaccionService/ReservarProducto", ReplyAction="http://tempuri.org/IMacroTransaccionService/ReservarProductoResponse")]
        System.Threading.Tasks.Task<CarritoCompras.Utilitario.ResponseWeb> ReservarProductoAsync(CarritoCompras.Entidad.ProductoEntidad entidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMacroTransaccionService/RegistrarPedido", ReplyAction="http://tempuri.org/IMacroTransaccionService/RegistrarPedidoResponse")]
        CarritoCompras.Utilitario.ResponseWeb RegistrarPedido(CarritoCompras.Entidad.PedidoEntidad entidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMacroTransaccionService/RegistrarPedido", ReplyAction="http://tempuri.org/IMacroTransaccionService/RegistrarPedidoResponse")]
        System.Threading.Tasks.Task<CarritoCompras.Utilitario.ResponseWeb> RegistrarPedidoAsync(CarritoCompras.Entidad.PedidoEntidad entidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMacroTransaccionService/ActualizarPedido", ReplyAction="http://tempuri.org/IMacroTransaccionService/ActualizarPedidoResponse")]
        CarritoCompras.Utilitario.ResponseWeb ActualizarPedido(CarritoCompras.Entidad.PedidoEntidad entidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMacroTransaccionService/ActualizarPedido", ReplyAction="http://tempuri.org/IMacroTransaccionService/ActualizarPedidoResponse")]
        System.Threading.Tasks.Task<CarritoCompras.Utilitario.ResponseWeb> ActualizarPedidoAsync(CarritoCompras.Entidad.PedidoEntidad entidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMacroTransaccionService/RegistrarCliente", ReplyAction="http://tempuri.org/IMacroTransaccionService/RegistrarClienteResponse")]
        CarritoCompras.Utilitario.ResponseWeb RegistrarCliente(CarritoCompras.Entidad.ClienteEntidad entidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMacroTransaccionService/RegistrarCliente", ReplyAction="http://tempuri.org/IMacroTransaccionService/RegistrarClienteResponse")]
        System.Threading.Tasks.Task<CarritoCompras.Utilitario.ResponseWeb> RegistrarClienteAsync(CarritoCompras.Entidad.ClienteEntidad entidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMacroTransaccionService/ActualizarCliente", ReplyAction="http://tempuri.org/IMacroTransaccionService/ActualizarClienteResponse")]
        CarritoCompras.Utilitario.ResponseWeb ActualizarCliente(CarritoCompras.Entidad.ClienteEntidad entidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMacroTransaccionService/ActualizarCliente", ReplyAction="http://tempuri.org/IMacroTransaccionService/ActualizarClienteResponse")]
        System.Threading.Tasks.Task<CarritoCompras.Utilitario.ResponseWeb> ActualizarClienteAsync(CarritoCompras.Entidad.ClienteEntidad entidad);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMacroTransaccionServiceChannel : CarritoCompras.EntityService.MTS.IMacroTransaccionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MacroTransaccionServiceClient : System.ServiceModel.ClientBase<CarritoCompras.EntityService.MTS.IMacroTransaccionService>, CarritoCompras.EntityService.MTS.IMacroTransaccionService {
        
        public MacroTransaccionServiceClient() {
        }
        
        public MacroTransaccionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MacroTransaccionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MacroTransaccionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MacroTransaccionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CarritoCompras.Utilitario.ResponseWeb ReservarProducto(CarritoCompras.Entidad.ProductoEntidad entidad) {
            return base.Channel.ReservarProducto(entidad);
        }
        
        public System.Threading.Tasks.Task<CarritoCompras.Utilitario.ResponseWeb> ReservarProductoAsync(CarritoCompras.Entidad.ProductoEntidad entidad) {
            return base.Channel.ReservarProductoAsync(entidad);
        }
        
        public CarritoCompras.Utilitario.ResponseWeb RegistrarPedido(CarritoCompras.Entidad.PedidoEntidad entidad) {
            return base.Channel.RegistrarPedido(entidad);
        }
        
        public System.Threading.Tasks.Task<CarritoCompras.Utilitario.ResponseWeb> RegistrarPedidoAsync(CarritoCompras.Entidad.PedidoEntidad entidad) {
            return base.Channel.RegistrarPedidoAsync(entidad);
        }
        
        public CarritoCompras.Utilitario.ResponseWeb ActualizarPedido(CarritoCompras.Entidad.PedidoEntidad entidad) {
            return base.Channel.ActualizarPedido(entidad);
        }
        
        public System.Threading.Tasks.Task<CarritoCompras.Utilitario.ResponseWeb> ActualizarPedidoAsync(CarritoCompras.Entidad.PedidoEntidad entidad) {
            return base.Channel.ActualizarPedidoAsync(entidad);
        }
        
        public CarritoCompras.Utilitario.ResponseWeb RegistrarCliente(CarritoCompras.Entidad.ClienteEntidad entidad) {
            return base.Channel.RegistrarCliente(entidad);
        }
        
        public System.Threading.Tasks.Task<CarritoCompras.Utilitario.ResponseWeb> RegistrarClienteAsync(CarritoCompras.Entidad.ClienteEntidad entidad) {
            return base.Channel.RegistrarClienteAsync(entidad);
        }
        
        public CarritoCompras.Utilitario.ResponseWeb ActualizarCliente(CarritoCompras.Entidad.ClienteEntidad entidad) {
            return base.Channel.ActualizarCliente(entidad);
        }
        
        public System.Threading.Tasks.Task<CarritoCompras.Utilitario.ResponseWeb> ActualizarClienteAsync(CarritoCompras.Entidad.ClienteEntidad entidad) {
            return base.Channel.ActualizarClienteAsync(entidad);
        }
    }
}
